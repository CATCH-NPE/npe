{"componentChunkName":"component---src-templates-series-jsx","path":"/series/가상메모리,-메모리분할/","result":{"data":{"posts":{"nodes":[{"excerpt":"물리주소와 논리주소  메모리는 보조기억장치로 부터 실행될 프로그램을 받아서 저장합니다.\n이 저장된 메모리의 데이터를 CPU 혹은 실행중인 프로그램이 읽어 실행하게 됩니다. 해당 그림은 두가지 관점으로 주소를 나누고 사용하는 방식을 그림으로 나타낸 것입니다. 왜, 주소를 두가지 방식으로 나누어서 사용하게 되었을까요? 이유는 메모리에 저장되어 있는 정보는 변…","fields":{"slug":"/jc20/"},"frontmatter":{"date":"September 23, 2025","update":"Sep 23, 2025","title":"물리주소, 논리주소 그리고 메모리 분할 방식","tags":["운영체제"]}},{"excerpt":"연속 메모리 할당  연속 메모리 할당이란 메모리에 프로세스가 그림처럼 연속적으로 배치되는 상황을 가정합니다. 프로세스 A가 할당되고, 남는 주소만큼 이어서 B,C,D...를 할당하는 방식입니다. 이런 방식은 예제를 위한 단편적인 설명만 가능한데 이유는 아래에서 설명할 스와핑과 관련이 있습니다. 스와핑이란? 메모리는 실행시킬 프로세스를 적재하게 됩니다. 하…","fields":{"slug":"/jc21/"},"frontmatter":{"date":"September 24, 2025","update":"Sep 24, 2025","title":"메모리 배치기법 그리고 단편화에 대해","tags":["운영체제"]}},{"excerpt":"연속 할당의 문제점 연속적 할당의 대표적인 문제점은 외부 단편화가 있습니다. 외부 단편화란 특정 프로세스를 실행시키기 위해\n필요한 공간이 있음에도 빈공간이 연속적이지 않아서 발생하는 문제입니다. 이러한 문제를 해결하기 위해서는 불연속 할당 방식 중 대표적인 페이징기법을 사용할 수 있습니다. 페이징이란?  페이징 기법은 프로세스를 일정한 단위로 자릅니다. …","fields":{"slug":"/jc22/"},"frontmatter":{"date":"September 25, 2025","update":"Sep 25, 2025","title":"페이징","tags":["운영체제"]}},{"excerpt":"서론 지금까지 가상 메모리를 통해서 실제 물리적 메모리 보다 더 많은 프로세스를 실행할 수 있다고 배웠습니다.\n이러한 행위는 한정된 메모리를 어떻게 더 효율적으로 사용할까에서 출발하게 됩니다. 그럼에도 더 효율적인 메모리를 이용하기 위해서 두가지 방법을 더 고려하게 됩니다. 불필요한 페이지를 선별 후 스왑 아웃 한다. 프로세스에게 적절한 프레임을 할당한다…","fields":{"slug":"/jc23/"},"frontmatter":{"date":"September 26, 2025","update":"Sep 26, 2025","title":"요구페이징을 잘 수행하기 위해서 필요한 것들","tags":["운영체제"]}}]}},"pageContext":{"series":"가상메모리, 메모리분할"}},"staticQueryHashes":[],"slicesMap":{}}