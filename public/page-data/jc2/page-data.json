{"componentChunkName":"component---src-templates-post-jsx","path":"/jc2/","result":{"data":{"site":{"siteMetadata":{"title":"CATCH NPE"}},"markdownRemark":{"id":"206f7f4e-13af-5568-b55d-4f56ccf6f27d","excerpt":"CPU 스케줄링 CPU 스케줄링은 CPU를 항상 바쁘게 동작시켜 자원을 낭비하지 않고 최적으로 활용할 수 있게 돕기도 하며,\n모든 프로세스로 하여금 CPU를 공정하게 할당할 수 있게 합니다. CPU 스케줄링이란 프로세스의 작업을 수행하기 위해 언제, 어떤 프로세스에 CPU를 할당할지 결정하는 작업을 말합니다.\n CPU 스케줄링 원칙 CPU는 스케줄링을 하…","html":"<h2 id=\"CPU-스케줄링\" style=\"position:relative;\"><a href=\"#CPU-%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81\" aria-label=\"CPU 스케줄링 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>CPU 스케줄링</h2>\n<hr>\n<p><strong>CPU 스케줄링</strong>은 CPU를 항상 바쁘게 동작시켜 자원을 낭비하지 않고 최적으로 활용할 수 있게 돕기도 하며,\n<br>모든 프로세스로 하여금 CPU를 공정하게 할당할 수 있게 합니다.</p>\n<p>CPU 스케줄링이란 프로세스의 작업을 수행하기 위해 언제, 어떤 프로세스에 CPU를 할당할지 결정하는 작업을 말합니다.\n<br></p>\n<h3 id=\"CPU-스케줄링-원칙\" style=\"position:relative;\"><a href=\"#CPU-%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81-%EC%9B%90%EC%B9%99\" aria-label=\"CPU 스케줄링 원칙 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>CPU 스케줄링 원칙</h3>\n<hr>\n<p>CPU는 스케줄링을 하면서 두가지 원칙을 중요시 하게 됩니다.\n<br></p>\n<ol>\n<li>공정함: 특정 프로세스 실행이 무한정 대기하지 않도록 기간을 보장합니다.</li>\n<li>우선순위: 우선순위가 높은 작업에 우선권을 제공 합니다.</li>\n</ol>\n<br>\n<h3 id=\"CPU-스케줄링-평가-기준\" style=\"position:relative;\"><a href=\"#CPU-%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81-%ED%8F%89%EA%B0%80-%EA%B8%B0%EC%A4%80\" aria-label=\"CPU 스케줄링 평가 기준 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>CPU 스케줄링 평가 기준</h3>\n<hr>\n<p>CPU는 객관적인 스케줄링을 위해 아래와 같은 평가 기준을 사용합니다.</p>\n<br>\n<ol>\n<li>CPU 사용률 - CPU가 작업을 수행하는데 사용하는 시간의 비율</li>\n<li>처리량 - 시스템이 단위 시간당 완료할 수 있는 작업의 양</li>\n<li>응답 시간 - 시스템이 사용자의 요청에 반응하여 첫 번째 응답을 생성하기 시작하는데 걸리는 시간</li>\n<li>대기 시간 - 프로세스가 실행되기 위해 CPU를 할당받아 준비 상태에서 대기하는 시간의 총합</li>\n<li>처리 시간 - 특정 작업이 시작되었을 때부터 그 작업이 완전히 끝나는데 걸리는 시간의 총합</li>\n</ol>","frontmatter":{"title":"CPU 스케줄링, 시스템 자원 관리","date":"September 05, 2025","update":"September 05, 2025","tags":["운영체제"],"series":"운영체제 기본 개념"},"fields":{"slug":"/jc2/","readingTime":{"minutes":2.05}}},"seriesList":{"edges":[{"node":{"id":"a856e34f-f9a9-5164-8fb5-befe1aa43bcd","fields":{"slug":"/jc1/"},"frontmatter":{"title":"운영체제의 역할과 커널의 기능"}}},{"node":{"id":"206f7f4e-13af-5568-b55d-4f56ccf6f27d","fields":{"slug":"/jc2/"},"frontmatter":{"title":"CPU 스케줄링, 시스템 자원 관리"}}},{"node":{"id":"3b1392c5-94e5-5f2b-889c-04d05775956f","fields":{"slug":"/jc3/"},"frontmatter":{"title":"유저모드와 커널모드 전환, 시스템 콜의 동작 원리"}}},{"node":{"id":"c96ac712-ee44-5bd2-8318-3d771e986911","fields":{"slug":"/jc4/"},"frontmatter":{"title":"멀티프로그래밍, 시분할 시스템, 멀티프로세싱 개념"}}},{"node":{"id":"6fead90c-3201-5834-b766-1a6625757a89","fields":{"slug":"/jc5/"},"frontmatter":{"title":"인터럽트와 DMA를 통한 효율적 입출력 처리"}}},{"node":{"id":"1460ba25-d467-50f1-873c-d36498b197b7","fields":{"slug":"/jc6/"},"frontmatter":{"title":"동기식/비동기식 I/O의 차이와 활용 사례"}}}]},"previous":{"fields":{"slug":"/jc1/"},"frontmatter":{"title":"운영체제의 역할과 커널의 기능"}},"next":{"fields":{"slug":"/jc3/"},"frontmatter":{"title":"유저모드와 커널모드 전환, 시스템 콜의 동작 원리"}}},"pageContext":{"id":"206f7f4e-13af-5568-b55d-4f56ccf6f27d","series":"운영체제 기본 개념","previousPostId":"a856e34f-f9a9-5164-8fb5-befe1aa43bcd","nextPostId":"3b1392c5-94e5-5f2b-889c-04d05775956f"}},"staticQueryHashes":[],"slicesMap":{}}