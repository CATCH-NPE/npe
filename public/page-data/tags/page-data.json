{"componentChunkName":"component---src-pages-tags-jsx","path":"/tags/","result":{"data":{"site":{"siteMetadata":{"title":"CATCH NPE"}},"allMarkdownRemark":{"group":[{"fieldValue":"네트워크","totalCount":6},{"fieldValue":"운영체제","totalCount":28}],"nodes":[{"excerpt":"개요 라우팅이란 패킷이 이동할 최적의 경로를 설정한 뒤 해당 경로로 패킷을 이동시키는 것입니다.\n라우팅에서 중요하게 다룰 내용은, 라우팅 테이블 그리고 라우팅 프로토콜입니다. 라우터 라우터는 네트워크 계층의 핵심 장비입니다. 라우팅을 담당하며, 가정 환경에서는 공유기가 라우터의 기능을 대신 수행합니다.\n호스트는 패킷을 다른 네트워크로 전송하기 위해 라우터…","fields":{"slug":"/network-jc-6/"},"frontmatter":{"date":"October 02, 2025","update":"Oct 02, 2025","title":"라우팅이란?","tags":["네트워크"]}},{"excerpt":"IP주소 하나의 IP주소에는 크게 두가지 지점으로 나누어집니다. 네트워크 주소와 호스트 주소입니다. 네트워크 주소, 호스트 주소 네트워크 주소는 네트워크를 식별하는 역할을 하며, 호스트 주소는 호스트를 식별하는 역할을 합니다.  하나의 IP는 네트워크 주소 지점과 호스트 주소 지점이 다릅니다. 현재 그림은 각 주소에 16비트를 할당받은\n모습을 보이지만 옥…","fields":{"slug":"/network-jc-5/"},"frontmatter":{"date":"October 01, 2025","update":"Oct 01, 2025","title":"IP주소 체계","tags":["네트워크"]}},{"excerpt":"네트워크 계층이 필요한 이유? 이전 물리계층과 데이터링크 계층의 전송 범위는 LAN이라는 네트워크 속에서 이루어집니다.\n하지만, 현대의 네트워크는 LAN과 LAN을 넘어 통신할 수 있습니다. 이러한 통신 범위를 LAN을 넘어 수행하는 계층이\n네트워크 계층입니다. L1, L2 계층의 한계 1. 물리 계층과 데이터 링크 계층만으로는 다른 네트워크 까지의 도달…","fields":{"slug":"/network-jc-4/"},"frontmatter":{"date":"September 30, 2025","update":"Sep 30, 2025","title":"네트워크 계층 ip에 대하여","tags":["네트워크"]}},{"excerpt":"NIC 통신 매체에는 전기, 빛 등 다양한 신호가 흐를 수 있습니다. 호스트가 이를 제대로 이해하려면 통신매체를 통해 전달되는\n신호와 컴퓨터가 이해할 수 있는 정보 간에 변환이 이루어져야 합니다. 호스트와 유무선 통신 매체를 연결하고 이러한 변환을 담당하는 네트워크 장비가\nNIC입니다. 요약하면 호스틀르 LAN에 연결하기 위한 하드웨어입니다. 허브 통신매…","fields":{"slug":"/network-jc-3/"},"frontmatter":{"date":"September 29, 2025","update":"Sep 29, 2025","title":"네트워크 장비와 역할","tags":["네트워크"]}},{"excerpt":"네트워크 참조 모델 네트워크로 메시지를 주고 받는 다는것을 다른 말로 풀어내면, 패킷을 주고 받는 과정이라고 할 수 있습니다.\n패킷이란 택배와 같으며 택배에 내용물을 담고 포장하고, 전달하여 상대방이 내용물을 얻고 이해하는 과정까지\n네트워크 상 패킷의 전송과정이라고 할 수 있습니다. 이러한 과정을 정형화된 단계를 거쳐서 나누게 되고 이를 계층으로 표현하는…","fields":{"slug":"/network-jc-2/"},"frontmatter":{"date":"September 28, 2025","update":"Sep 28, 2025","title":"네트워크 계층(TCP/IP, OSI 7계층), 캡슐화/비캡슐화","tags":["네트워크"]}},{"excerpt":"네트워크란?  네트워크란 여러개의 장치가 그물처럼 서로 연결되어 정보를 주고받을 수 있는 통신망을 네트워크*라고 합니다. 인터넷  우리가 흔히 말하는 인터넷이란 용어는 이러한 네트워크들의 집합입니다.\n여러 네트워크를 연결하고 서로 통신할 수 있게 도와주는 '네트워크의 네트워크'를 인터넷이라고 표현합니다. 네트워크의 구조  네트워크는 노드와 간선의 연결된 …","fields":{"slug":"/network-jc-1/"},"frontmatter":{"date":"September 27, 2025","update":"Sep 27, 2025","title":"인터넷과 프로토콜, 메시지 교환 방식(회선/패킷 AND 거리)","tags":["네트워크"]}},{"excerpt":"서론 지금까지 가상 메모리를 통해서 실제 물리적 메모리 보다 더 많은 프로세스를 실행할 수 있다고 배웠습니다.\n이러한 행위는 한정된 메모리를 어떻게 더 효율적으로 사용할까에서 출발하게 됩니다. 그럼에도 더 효율적인 메모리를 이용하기 위해서 두가지 방법을 더 고려하게 됩니다. 불필요한 페이지를 선별 후 스왑 아웃 한다. 프로세스에게 적절한 프레임을 할당한다…","fields":{"slug":"/jc23/"},"frontmatter":{"date":"September 26, 2025","update":"Sep 26, 2025","title":"요구페이징을 잘 수행하기 위해서 필요한 것들","tags":["운영체제"]}},{"excerpt":"연속 할당의 문제점 연속적 할당의 대표적인 문제점은 외부 단편화가 있습니다. 외부 단편화란 특정 프로세스를 실행시키기 위해\n필요한 공간이 있음에도 빈공간이 연속적이지 않아서 발생하는 문제입니다. 이러한 문제를 해결하기 위해서는 불연속 할당 방식 중 대표적인 페이징기법을 사용할 수 있습니다. 페이징이란?  페이징 기법은 프로세스를 일정한 단위로 자릅니다. …","fields":{"slug":"/jc22/"},"frontmatter":{"date":"September 25, 2025","update":"Sep 25, 2025","title":"페이징","tags":["운영체제"]}},{"excerpt":"연속 메모리 할당  연속 메모리 할당이란 메모리에 프로세스가 그림처럼 연속적으로 배치되는 상황을 가정합니다. 프로세스 A가 할당되고, 남는 주소만큼 이어서 B,C,D...를 할당하는 방식입니다. 이런 방식은 예제를 위한 단편적인 설명만 가능한데 이유는 아래에서 설명할 스와핑과 관련이 있습니다. 스와핑이란? 메모리는 실행시킬 프로세스를 적재하게 됩니다. 하…","fields":{"slug":"/jc21/"},"frontmatter":{"date":"September 24, 2025","update":"Sep 24, 2025","title":"메모리 배치기법 그리고 단편화에 대해","tags":["운영체제"]}},{"excerpt":"물리주소와 논리주소  메모리는 보조기억장치로 부터 실행될 프로그램을 받아서 저장합니다.\n이 저장된 메모리의 데이터를 CPU 혹은 실행중인 프로그램이 읽어 실행하게 됩니다. 해당 그림은 두가지 관점으로 주소를 나누고 사용하는 방식을 그림으로 나타낸 것입니다. 왜, 주소를 두가지 방식으로 나누어서 사용하게 되었을까요? 이유는 메모리에 저장되어 있는 정보는 변…","fields":{"slug":"/jc20/"},"frontmatter":{"date":"September 23, 2025","update":"Sep 23, 2025","title":"물리주소, 논리주소 그리고 메모리 분할 방식","tags":["운영체제"]}},{"excerpt":"교착상태란?(Dead Lock) 교착상태란 두개 이상의 프로세스가 각자 가지고 있는 자원을 무작정 기다리는것을 말합니다. 교착상태를 설명하는 대표적인 예시로 식사하는 철학자 문제라는게 있습니다. 식사하는 철학자  식사하는 철학자 문제는 그림처럼 동그란 원탁에 다섯명의 철학자가 앉아 있습니다. 이 철학자들은 각각 식사를 배정받고, 식사에 필요한 포크도 있습…","fields":{"slug":"/jc19/"},"frontmatter":{"date":"September 22, 2025","update":"Sep 22, 2025","title":"교착상태와 해결 방법","tags":["운영체제"]}},{"excerpt":"상호배제(Mutual Exclusion) 상호배제(Mutual Exclusion)는 여러 프로세스나 스레드가 동시에 같은 공유 자원에 접근하는 것을 막는 메커니즘입니다. 일상생활에서 비유하면, 화장실 사용과 같습니다.\n한 번에 한 사람만 화장실을 사용할 수 있고, 다른 사람들은 기다려야 합니다.\n컴퓨터 시스템에서도 마찬가지로 특정 자원은 한 번에 하나의 …","fields":{"slug":"/jc18/"},"frontmatter":{"date":"September 21, 2025","update":"Sep 21, 2025","title":"상호배제와 동기화 기법","tags":["운영체제"]}},{"excerpt":"공유자원 동시에 실행되는 프로세스에서 공통으로 사용하는 자원을 우리는 공유자원이라고 부릅니다. 임계구역(Critical Section) 공유 자원을 사용하는 여러개의 프로세스 중, 해당 공유 자원에 접근하는 코드 영역을 임계 구역이라고 부릅니다. 두 개 이상의 프로세스가 임계 구역에 진입하고자 하면 둘 중 하나는 대기해야 합니다. 임계 구역에 먼저 진입한…","fields":{"slug":"/jc17/"},"frontmatter":{"date":"September 20, 2025","update":"Sep 20, 2025","title":"임계구역과 경쟁상태","tags":["운영체제"]}},{"excerpt":"병행성(Concurrency)  병행성은 다른 말로 동시성이라고 부르는 용어입니다.\n이전까지 보았던 싱글 코어에서 프로세스를 처리하기 위해 많은 프로세스들을 컨텍스트 스위칭을 통해 효율적으로 프로세스를 처리했던것 기억할것 입니다.\n이경우 프로세스를 동시에 처리한다고 표현하지만 사실 이는 빠른 속도로 프로세스를 스위칭해서 실행시키는 것이지 실제로 동시에 실…","fields":{"slug":"/jc16/"},"frontmatter":{"date":"September 19, 2025","update":"Sep 19, 2025","title":"병행성과 병렬성의 차이 및 프로세스 동기화의 필요성","tags":["운영체제"]}},{"excerpt":"다단계 큐 스케쥴링(Multilevel queue scheduling) 멀티 레벨 스케줄링은 우선순위 스케줄링의 발전된 형태입니다.\n아래 그림을 통해 설명 하면,  이전에는 준비상태에 해당하는 단 하나의 큐만 사용하여 스케줄링을 진행하였는데,\n멀티레벨 스케줄링은 우선순위에 따른 n개의 큐를 이용하는 방식입니다. 가장 높은 우선순위에 있는 큐들을 처리하고,…","fields":{"slug":"/jc15/"},"frontmatter":{"date":"September 18, 2025","update":"Sep 18, 2025","title":"멀티 레벨 큐와 멀티 레벨 피드백 큐 스케줄링","tags":["운영체제"]}},{"excerpt":"스케줄링 알고리즘 개요 스케줄링 알고리즘중 다섯가지의 알고리즘을 선점, 비선점을 통해 설명하겠습니다. 비선점 스케줄링 선입 선처리 스케줄링 (FCFS) 최단 작업 우선 스케줄링 (SJF) 선점 스케줄링 라운드 로빈 스케줄링 최소 잔여 시간 우성 스케줄링 (SRT) 우선순위 스케줄링 비 선점 스케줄링 선입 선처리 스케줄(FCFS)  FCFS는 준비 큐에 들…","fields":{"slug":"/jc14/"},"frontmatter":{"date":"September 17, 2025","update":"Sep 17, 2025","title":"CPU 스케줄링 알고리즘 (FCFS, SJF, SRTF, 우선순위, 라운드 로빈)","tags":["운영체제"]}},{"excerpt":"선점형? 비선점형? 개요 CPU 스케줄링은 자원 선점 후 자원에 대한 권한이 뺏길 수 있냐 없냐에 따라 두가지로 나누게 됩니다. 여기서 자원을 사용하고 있음에도 외부에서 CPU 자원을 뺏는 방식과, 한번 점유한 CPU 자원을 끝가지 사용할 수 있는 방식이 있습니다. 선점형 스케줄링 선점의 사전적 정의는 '남보다 앞서서 차지함'이라는 뜻을 가지게 됩니다. …","fields":{"slug":"/jc13/"},"frontmatter":{"date":"September 16, 2025","update":"Sep 16, 2025","title":"선점형과 비선점형 스케줄링의 차이 및 기아 상태와 해결 방법","tags":["운영체제"]}},{"excerpt":"CPU 할당? 지금까지 배운 내용을 토대로 프로세스는 CPU를 필요로 하며, 프로세스가 실행 된다는 말은 메모리에 올라간 데이터를 토대로 프로세스가 CPU를 할당받아 사용\n하는것을 프로세스가 실행 된다고 표현합니다. 그 과정에서 프로세스는 일정 주기마다 컨텍스트 스위칭을 통해 CPU 할당을 바꾸고 IO요청에 대해서도 대기 상태로 들어가는 등\nCPU사용에 …","fields":{"slug":"/jc12/"},"frontmatter":{"date":"September 15, 2025","update":"Sep 15, 2025","title":"CPU 스케줄링의 목적과 스케줄러의 종류","tags":["운영체제"]}},{"excerpt":"동시성 이슈란?  동시성 이슈란 하나의 자원에 대해 여러 스레드가 접근할때 발생합니다. 예를 들어, 좋아요가 10 인 자원에 대해 스레드 a와 b가 동시에 접근해서 좋아요 10에 대한 값을 가져옵니다.\n스레드 a는 좋아요 카운트를 하나 늘리는 행위를 하고 스레드 b는 좋아요 카운트를 하나 줄이는 행위를 할때\n스레드 a가 좋아요 카운트를 늘리면 11가 됩니…","fields":{"slug":"/jc11/"},"frontmatter":{"date":"September 14, 2025","update":"Sep 14, 2025","title":"멀티 쓰레드 프로그래밍의 동시성 이슈와 Thread-Safe 설계 방법","tags":["운영체제"]}},{"excerpt":"멀티 프로세스는 운영체제에서 하나의 응용 프로그램에 대해 동시에 여러 개의 프로세스를 실행할 수 있게 하는 기술입니다.\n보통은 하나의 프로그램을 실행하기 위해서 하나의 프로세스만 메모리에 생성하게 되지만, 부가적인 기능을 위해\n여러개의 프로세스를 생성하는 것입니다. 어떻게 멀티 프로세스를 생성할까? 멀티 프로세스는 이전에 보았던 계층구조 프로세스 처럼 부…","fields":{"slug":"/jc10/"},"frontmatter":{"date":"September 13, 2025","update":"Sep 13, 2025","title":"멀티 프로세스와 멀티 쓰레드의 차이 및 장단점","tags":["운영체제"]}},{"excerpt":"기아 상태와 CPU 스케줄링 프로세스들은 실행할 때 컴퓨터 자원을 사용하는데, 이때 CPU도 사용합니다.\n그런데 만약 하나의 프로세스가 오랜 시간 동안 CPU를 점유하거나,\n너무 짧은 텀동안만 실행되는 경우 공정하지 못한 방법으로 자원을 할당하게 될 것이고\n이는 시스템의 효율적이지 못한 방법으로 돌아가게 하는 길을 초래할 수 있을 겁니다.\n이를 컴퓨팅에서…","fields":{"slug":"/hs5/"},"frontmatter":{"date":"September 12, 2025","update":"Sep 12, 2025","title":"5. CPU 스케줄링","tags":["운영체제"]}},{"excerpt":"스레드란?  스레드는 프로세스를 구성하는 실행의 흐름 단위라고 표현합니다. 또한, 하나의 프로세스가 복수적인 스레드를 가질 수 있습니다. 그렇기 때문에 스레드를 이용하면\n하나의 프로세스에서 여러 부분을 동시에 실행할 수 있습니다. 마치 화상 회의를 진행중에 회의 어플리케이션이란 프로세스 속 채팅과 화상통화의 기능이 독립적으로 돌아가는것과\n같이 여러 기능을…","fields":{"slug":"/jc9/"},"frontmatter":{"date":"September 12, 2025","update":"Sep 12, 2025","title":"쓰레드의 개념, 메모리 공유 구조 및 TCB","tags":["운영체제"]}},{"excerpt":"문맥교환(Context Switching) 하나의 프로세스에서 다른 프로세스로 실행 순서가 넘어가면 어떤 일이 발생할까요? 프로세스 A가 CPU를 사용하다가 사용 시간이 끝나서 프로세스 B로 넘어간다면, A프로세스의 정보를\n저장하여야 합니다. 이곳에서는 이전에 보았던 PCB의 값인 레지스터 값, 메모리 정보등 중간 정보를 저장하여야\n이후 자신의 차례가 왔…","fields":{"slug":"/jc8/"},"frontmatter":{"date":"September 11, 2025","update":"Sep 11, 2025","title":"문맥교환 그리고 프로세스 상태 변화, 프로세스 계층과 생성 방식을 알아보기","tags":["운영체제"]}},{"excerpt":"프로세스란 무엇일까? 우리는 흔히 보조 기억장치에 있는 프로그램 정보를 메모리로 적재하고, 적재된 정보를 CPU가 읽어 사용하는 이 과정을 프로그램이 실행되었다 라고 표현합니다. 여기서 실행된 프로그램을 프로세스라는 개별적인 용어로 부르고 프로그램을 실행하는 과정을 프로세스를 생성한다고 표현합니다.  백그라운드 프로세스라고 해서 사용자와 상호작용하지 않는…","fields":{"slug":"/jc7/"},"frontmatter":{"date":"September 10, 2025","update":"Sep 10, 2025","title":"프로세스와 PCB 그리고 메모리 구조에 대해서 알아보기","tags":["운영체제"]}},{"excerpt":"IO란 개발을 하다 보면 I/O라는 용어를 자주 듣게 됩니다. I/O는 Input/Output의 줄임말로, 컴퓨터가 외부와 데이터를\n주고받는 일련의 작업을 통칭 I/O라고 부르게 됩니다. 예시를 들어서 파일 읽기/쓰기 (문서를 열거나 저장하는 행위) 네트워크 통신(웹사이트 접속, 이메일 전송) 데이터베이스 조회(회원 정보 검색) 이런 일련의 행위는 공통적…","fields":{"slug":"/jc6/"},"frontmatter":{"date":"September 09, 2025","update":"Sep 09, 2025","title":"동기식/비동기식 I/O의 차이와 활용 사례","tags":["운영체제"]}},{"excerpt":"쓰레드란? 쓰레드는 프로세스를 구성하는 실행 흐름의 단위를 의미합니다.  그래서 하나의 프로세스는 1개 이상의 쓰레드를 가집니다.\n이로 인해 하나의 프로세스에서 여러 작업을 동시에 수행할 수 있습니다. 사용자 수준 쓰레드와 커널 수준 쓰레드의 차이 사용자 수준 쓰레드란, 라이브러리를 통해 구현한 쓰레드를 의미합니다.\n쓰레드와 관련된 모든 행위를 사용자 영…","fields":{"slug":"/hs4/"},"frontmatter":{"date":"September 08, 2025","update":"Sep 08, 2025","title":"4. 쓰레드 ","tags":["운영체제"]}},{"excerpt":"프로세스란?  컴퓨팅에서 프로세스란 운영체제로부터 메모리 공간을 할당받아 실행 중인 프로그램의 인스턴스를 의미합니다.\n여기서 논하는 프로그램이란, 일반적으로 하드 디스크와 같은 저장장치에 저장되어 있는 실행 코드를 뜻합니다. 프로세스의 메모리 공간 프로세스는 다음 4개의 메모리 영역으로 구성되고 가상 메모리 공간에 독립적으로 형성됩니다. 코드 영역(Cod…","fields":{"slug":"/hs3/"},"frontmatter":{"date":"September 08, 2025","update":"Sep 08, 2025","title":"3. 프로세스","tags":["운영체제"]}},{"excerpt":"인터럽트 기반 입출력 인터럽트는 컴퓨터 시스템에서 현재 실행 중인 프로세스를 중단 하고, 인터럽트를 발생시킨 작업을 처리하기 위한\n방법 혹은 과정 이다. 인터럽트는 CPU의 실행 흐름을 중단시키고 인터럽트가 끝난 후 원래의 흐름으로 돌아가는 방식을 가진다. 인터럽트는 크게 두가지로 나뉘게 되며, 소프트웨어 혹은 하드웨어 인터럽트로 나누어지며 이는 인터럽트…","fields":{"slug":"/jc5/"},"frontmatter":{"date":"September 08, 2025","update":"Sep 08, 2025","title":"인터럽트와 DMA를 통한 효율적 입출력 처리","tags":["운영체제"]}},{"excerpt":"단일 프로세스 초창기 컴퓨터를 상상하면 지금처럼 복잡한 방법이 아닌, 한번에 하나의 프로그램만 실행 할 수 있었을것이다.\n이 말은 다른 프로그램을 사용 해야 하는 순간 기존 프로그램이 종료 되거나,\n끝날때 까지 기다려야 합니다.  멀티 프로그래밍  이러한 문제를 해결하기 위해 어쩔 수 없이 작업이 멈추는 구간에 다른 작업을 진행하는 방법을 사용하게 된다.…","fields":{"slug":"/jc4/"},"frontmatter":{"date":"September 07, 2025","update":"Sep 07, 2025","title":"멀티프로그래밍, 시분할 시스템, 멀티프로세싱 개념","tags":["운영체제"]}},{"excerpt":"이중모드 운영체제는 자원을 충돌 없이 효율적으로 사용하기 위해 자원 관리의 진입점이 된다고 말했습니다. 그럼 일반 응용프로그램은 어떻게 자원에 접근 할 수 있을까요? 이에 대한 답은 이중 모드 입니다.  위 사진 처럼 CPU가 명령을 실행하는 방식을 사용자 모드 와 커널 모드로 나누어 사용하게 됩니다. 사용자 모드 사용자 모드는 운영체제 서비스를 제공받을…","fields":{"slug":"/jc3/"},"frontmatter":{"date":"September 06, 2025","update":"Sep 06, 2025","title":"유저모드와 커널모드 전환, 시스템 콜의 동작 원리","tags":["운영체제"]}},{"excerpt":"CPU 스케줄링 CPU 스케줄링은 CPU를 항상 바쁘게 동작시켜 자원을 낭비하지 않고 최적으로 활용할 수 있게 돕기도 하며,\n모든 프로세스로 하여금 CPU를 공정하게 할당할 수 있게 합니다. CPU 스케줄링이란 프로세스의 작업을 수행하기 위해 언제, 어떤 프로세스에 CPU를 할당할지 결정하는 작업을 말합니다.\n CPU 스케줄링 원칙 CPU는 스케줄링을 하…","fields":{"slug":"/jc2/"},"frontmatter":{"date":"September 05, 2025","update":"Sep 05, 2025","title":"CPU 스케줄링, 시스템 자원 관리","tags":["운영체제"]}},{"excerpt":"앞서, 운영체제란 무엇인지 그리고 커널에 대해 간단하게 알아봤다.\n이제 커널이 어떻게 작동하는지 제대로 알아보자. 먼저 인터럽트(Interrupt)에 대해 알아야 한다.  컴퓨터는 위 사진처럼 주변 입출력 기기와 서로 통신하는데\n이 과정에서 서로 입출력 요청이 오가는데 이때 입출력 메커니즘들이 발생된다.\n이중 하나가 인터럽트이다. \n인터럽트는 중단시키다라…","fields":{"slug":"/hs2/"},"frontmatter":{"date":"September 04, 2025","update":"Sep 04, 2025","title":"2. 커널의 작동 방식","tags":["운영체제"]}},{"excerpt":"운영체제란 무엇일까? 운영체제는 컴퓨터 하드웨어와 소프트웨어를 관리하고, 사용자와 컴퓨터 사이 인터페이스 역할을 합니다. 대표적인 기능으로는 자원을 관리하고,\n 프로세스를 관리하는 등 여러가지 일을 수행합니다. 이러한 운영체제는 프로그램을 위한 프로그램으로서 작동하게 되며, 여러 프로그램을 충돌없이 효율적으로 사용하는 기능을 제공합니다. 운영체제의 역할 …","fields":{"slug":"/jc1/"},"frontmatter":{"date":"September 04, 2025","update":"Sep 04, 2025","title":"운영체제의 역할과 커널의 기능","tags":["운영체제"]}},{"excerpt":"운영체제(OS, Operating System) 운영체제는 컴퓨터라는 기계 안에서 프로그램과 하드웨어 사이에서 문제없이 그리고 효율적으로 잘 돌아가도록 관리해주는 소프트웨어이다.  운영체제가 없으면 어떻게 될까? 꼭 필요할까? A computer is a machine that can be programmed to automatically carry ou…","fields":{"slug":"/hs1/"},"frontmatter":{"date":"September 03, 2025","update":"Sep 03, 2025","title":"1. 운영체제의 개념과 구조","tags":["운영체제"]}}]}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}